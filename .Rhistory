##############sd drug net################
drugnet=line[(index-1)*5+4]
library(stringr)
setwd('C:/Users/zty20/Documents/R/drug target/demo')
library(stringr)
setwd('../')
t=read.table('demodata.txt',stringsAsFactor=F)
library(stringr)
setwd('D:\dani')
library(stringr)
setwd('D:\dani')
library(stringr)
setwd('D:/dani')
t=read.table('demodata.txt',stringsAsFactor=F)
target=unique(t[,2])
drug=unique(t[,1])
con <- file("drug_detail2.txt", "r")
line=readLines(con,n=60555)
close(con)
database=line[seq(1,60555,5)]
index=apply(as.matrix(drug),1,function(x){which(x==database)})
##############sd drug net################
drugnet=line[(index-1)*5+4]
net=str_split(drugnet,' ')
pt=unlist(net)
a=as.data.frame(table(pt))
alldrug=as.character(a[which(a[,2]>8),1])
alldrug=unique(c(alldrug,drug))
database2=line[seq(4,60555,5)]
dindex=apply(as.matrix(alldrug),1,function(x){grep(x,database)})
dindex=unlist(dindex)
index=apply(as.matrix(alldrug),1,function(x){grep(x,database2)})
sd_drugnet=matrix(0,length(alldrug),length(alldrug))
for (i in 1:length(dindex)){
a=intersect(index[[i]],dindex)
position=apply(as.matrix(a),1,function(x){which(x==dindex)})
sd_drugnet[i,position]=1
}
write.table(file='sd_drugnet.txt',sd_drugnet,row.names = FALSE,col.names = FALSE,quote = FALSE)
###############st drug net####################
dindex=apply(as.matrix(drug),1,function(x){grep(x,database)})
index=apply(as.matrix(drug),1,function(x){grep(x,database2)})
st_drugnet=matrix(0,length(drug),length(drug))
for (i in 1:length(dindex)){
a=intersect(index[[i]],dindex)
position=apply(as.matrix(a),1,function(x){which(x==dindex)})
st_drugnet[i,position]=1
}
write.table(file='st_drugnet.txt',st_drugnet,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
write.table(file='st_drugname.txt',drug,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
########################################################
index=apply(as.matrix(drug),1,function(x){which(x==database)})
drugcate=line[(index-1)*5+2]
cate=str_split(drugcate,' ')
pt=unlist(cate)
dcate=as.matrix(unique(pt))
a=as.data.frame(table(pt))
catename=as.character(a[which(a[,2]>1),1])
###############st drug feature####################
st_drugfeature=matrix(0,length(drug),length(catename))
for (i in 1:length(drug)){
name=cate[[i]]
pl=apply(as.matrix(name),1,function(x){which(x==catename)})
st_drugfeature[i,unlist(pl)]=1
}
write.table(file='st_drugfeature27.txt',st_drugfeature,row.names = FALSE,col.names = FALSE,quote = FALSE)
##############sd drug feature################
dindex=apply(as.matrix(alldrug),1,function(x){which(x==database)})
drugcate=line[(dindex-1)*5+2]
cate=str_split(drugcate,' ')
pt=unlist(cate)
dcate=as.matrix(unique(pt))
a=as.data.frame(table(pt))
catename=as.character(a[which(a[,2]>100),1])
sd_drugfeature=matrix(0,length(alldrug),length(catename))
for (i in 1:length(alldrug)){
name=cate[[i]]
pl=apply(as.matrix(name),1,function(x){which(x==catename)})
sd_drugfeature[i,unlist(pl)]=1
}
write.table(file='sd_drugfeature46.txt',sd_drugfeature,row.names = FALSE,col.names = FALSE,quote = FALSE)
write.table(file='sd_drug_name.txt',alldrug,row.names = FALSE,col.names = FALSE,quote = FALSE)
######################sd_label#####################
sd_label=matrix(0,length(alldrug),length(target))
drug=t[,1]
protein=t[,2]
for (i in 1:length(alldrug)){
p=which(alldrug[i]==drug)
if (length(p)!=0){
tt=protein[p]
position=apply(as.matrix(tt),1,function(x){which(target==x)})
sd_label[i,position]=1
}
}
write.table(file='sd_label.txt',sd_label,row.names = FALSE,col.names = FALSE,quote = FALSE)
library(stringr)
setwd('D:/dani')
t=read.table('demodata.txt',stringsAsFactor=F)
target=data.frame(unique(t[,2]))
feature=read.table('protein_feature_26.txt',stringsAsFactor=F)
inter=read.table('protein_interact.txt',stringsAsFactor=F)
################sd_proteinnet#########################
index1=apply(target,1,function(x){which(inter[,1]==x)})
index2=apply(target,1,function(x){which(inter[,2]==x)})
sd_proteinnet=matrix(0,nrow(target),nrow(target))
for (i in 1:length(index1)){
for (j in 1:length(index2)){
index=intersect(index1[[i]],index2[[j]])
if (length(index)!=0){
sd_proteinnet[i,j]=inter[index[1],3]
sd_proteinnet[j,i]=inter[index[1],3]
}
}
}
for (i in 1:nrow(sd_proteinnet)){
sd_proteinnet[i,i]=1
}
write.table(file='sd_proteinnet.txt',sd_proteinnet,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
write.table(file='sd_proteinname.txt',target,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
################st_proteinnet#########################
index1=apply(target,1,function(x){which(inter[,1]==x)})
index2=apply(target,1,function(x){which(inter[,2]==x)})
index=c(inter[unlist(index1),2],inter[unlist(index2),1])
a=as.data.frame(table(index))
protein=intersect(as.character(a[which(a[,2]>2),1]),feature[,1])
protein=as.matrix(unique(c(protein,as.matrix(target))))
index1=apply(protein,1,function(x){which(inter[,1]==x)})
index2=apply(protein,1,function(x){which(inter[,2]==x)})
st_proteinnet=matrix(0,nrow(protein),nrow(protein))
for (i in 1:length(index1)){
for (j in 1:length(index2)){
index=intersect(index1[[i]],index2[[j]])
if (length(index)!=0){
st_proteinnet[i,j]=inter[index[1],3]
st_proteinnet[j,i]=inter[index[1],3]
}
}
}
for (i in 1:nrow(st_proteinnet)){
st_proteinnet[i,i]=1
}
write.table(file='st_proteinnet.txt',st_proteinnet,row.names = FALSE,col.names = FALSE,quote = FALSE)
write.table(file='st_proteinname.txt',protein,row.names = FALSE,col.names = FALSE,quote = FALSE)
############sd_proteinfeature###############
index=apply(target,1,function(x){which(feature[,1]==x)[1]})
sd_proteinfeature=feature[index,2:27]
write.table(file='sd_proteinfeature.txt',sd_proteinfeature,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
#############st_proteinfeature###############
index=apply(protein,1,function(x){which(feature[,1]==x)[1]})
st_proteinfeature=feature[index,2:27]
write.table(file='st_proteinfeature.txt',st_proteinfeature,row.names = FALSE,col.names = FALSE,quote = FALSE)
###############st_label####################
drug=data.frame(unique(t[,1]))
st_label=matrix(0,length(protein),nrow(drug))
for (i in 1:length(protein)){
p=which(t[,2]==protein[i])
if (length(p)!=0){
tt=t[p,1]
position=apply(as.matrix(tt),1,function(x){which(drug==x)})
st_label[i,position]=1
}
}
write.table(file='st_label.txt',st_label,row.names = FALSE,col.names = FALSE,quote = FALSE)
setwd('C:/Users/zty20/Documents/R/drug target/demo')
setwd('D:/dani')
library(data.table)
library(keras)
library(sigmoid)
source('GCN.R')
############st##################
netedge=read.table('st_drugnet.txt')
X=as.matrix(read.table('st_drugfeature27.txt'))
pnetedge=read.table('st_proteinnet.txt')
pX=as.matrix(read.table('st_proteinfeature.txt'))
original=read.table('demodata.txt',stringsAsFactor=F)
alldrug=read.table('st_drugname.txt',stringsAsFactor=F)
allprotein=read.table('st_proteinname.txt',stringsAsFactor=F)
protein_index=apply(as.matrix(original[,2]),1,function(x){which(x==allprotein)})
newprotein_index=setdiff(1:nrow(allprotein),protein_index)
newprotein=allprotein[newprotein_index,]
label=matrix(0,nrow(alldrug),nrow(allprotein))
for (i in 1:nrow(alldrug)){
index1=which(original[,1]==alldrug[i,1])
index2=apply(as.matrix(original[index1,2]),1,function(x){which(allprotein==x)})
label[i,index2]=1
}
allfeature=matrix(0,nrow(pX)*nrow(X),ncol(X)+ncol(pX))
for (i in 1:nrow(X)){
for (j in 1:nrow(pX)){
allfeature[((i-1)*nrow(pX)+j),]=c(pX[j,],X[i,])
}
}
feature_gcn=GCN(netedge,pnetedge,label,allfeature)
label=as.vector(label)
label1=matrix(0,length(label),3)
for (i in 1:nrow(allprotein)){
for (j in 1:nrow(alldrug)){
label1[(i-1)*nrow(alldrug)+j,1]=alldrug[j,1]
label1[(i-1)*nrow(alldrug)+j,2]=allprotein[i,1]
label1[(i-1)*nrow(alldrug)+j,3]=label[(i-1)*nrow(alldrug)+j]
}
}
index=which(label1[,2]==newprotein)
index=apply(as.matrix(newprotein),1,function(x){which(label1[,2]==x)})
posi=which(label==1)
negi=as.vector(index)
neg=feature_gcn[negi,]
pos=feature_gcn[posi,]
set.seed(100)
samplepos=sample(1:nrow(pos))
set.seed(100)
sampletest=sample(1:nrow(neg))
library(pROC)
library(PRROC)
posindex=cut(1:nrow(pos),10, labels=F)
negindex=cut(1:nrow(neg),10, labels=F)
for (ll in  1:10){
cv.test1=samplepos[which(posindex==ll)]
cv.test2=sampletest[which(negindex==ll)]
cv.sample=rbind(pos[setdiff(samplepos,cv.test1),],neg[setdiff(sampletest,cv.test2),])
cv.test=rbind(pos[cv.test1,],neg[cv.test2,])
testindex=c(posi[cv.test1],negi[cv.test2])
samplelabel=matrix(0,nrow(cv.sample),1)
samplelabel[1:nrow(pos[setdiff(samplepos,cv.test1),])]=1
testlabel=matrix(0,nrow(cv.test),1)
testlabel[1:length(cv.test1)]=1
samplelabel1=to_categorical(samplelabel,2)
result=matrix(0,length(testlabel),1)
for (kk in 1:1){
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.2) %>%
layer_dense(units = 2, activation = 'sigmoid')
model %>% compile(
loss = 'binary_crossentropy',
optimizer = optimizer_rmsprop(),
metrics = c('accuracy')
)
model %>% fit(
as.matrix(cv.sample), samplelabel1,
epochs = 50, batch_size = 3,
validation_split = 0.1
)
result[,kk]=predict(model,as.matrix(cv.test))[,2]
}
print(ll)
plp=data.frame(label1[testindex,],rowSums(result)/5)
write.table(file='St_result.txt',plp,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
}
setwd('D:/dani')
library(data.table)
library(keras)
library(sigmoid)
source('GCN.R')
############st##################
netedge=read.table('sd_drugnet.txt')
X=as.matrix(read.table('sd_drugfeature46.txt'))
setwd('D:/dani')
library(data.table)
library(keras)
library(sigmoid)
source('GCN.R')
############sp##################
netedge=read.table('st_drugnet.txt')
X=as.matrix(read.table('st_drugfeature27.txt'))
pnetedge=read.table('sd_proteinnet.txt')
pX=as.matrix(read.table('sd_proteinfeature.txt'))
original=read.table('demodata.txt',stringsAsFactor=F)
alldrug=read.table('st_drugname.txt',stringsAsFactor=F)
allprotein=read.table('sd_proteinname.txt',stringsAsFactor=F)
label=matrix(0,nrow(alldrug),nrow(allprotein))
for (i in 1:nrow(alldrug)){
index1=which(original[,1]==alldrug[i,1])
index2=apply(as.matrix(original[index1,2]),1,function(x){which(allprotein==x)})
label[i,index2]=1
}
allfeature=matrix(0,nrow(pX)*nrow(X),ncol(X)+ncol(pX))
for (i in 1:nrow(X)){
for (j in 1:nrow(pX)){
allfeature[((i-1)*nrow(pX)+j),]=c(pX[j,],X[i,])
}
}
feature_gcn=GCN(netedge,pnetedge,label,allfeature)
label=as.vector(label)
label1=matrix(0,length(label),3)
for (i in 1:nrow(allprotein)){
for (j in 1:nrow(alldrug)){
label1[(i-1)*nrow(alldrug)+j,1]=alldrug[j,1]
label1[(i-1)*nrow(alldrug)+j,2]=allprotein[i,1]
label1[(i-1)*nrow(alldrug)+j,3]=label[(i-1)*nrow(alldrug)+j]
}
}
posi=which(label==1)
negi=which(label==0)
pos=feature_gcn[posi,]
neg=feature_gcn[negi,]
set.seed(100)
samplepos=sample(1:nrow(pos))
set.seed(100)
sampletest=sample(1:nrow(neg))
library(pROC)
library(PRROC)
posindex=cut(1:nrow(pos),10, labels=F)
negindex=cut(1:nrow(neg),10, labels=F)
for (ll in  1:10){
cv.test1=samplepos[which(posindex==ll)]
cv.test2=sampletest[which(negindex==ll)]
cv.sample=rbind(pos[setdiff(samplepos,cv.test1),],neg[setdiff(sampletest,cv.test2),])
cv.test=rbind(pos[cv.test1,],neg[cv.test2,])
testindex=c(posi[cv.test1],negi[cv.test2])
samplelabel=matrix(0,nrow(cv.sample),1)
samplelabel[1:nrow(pos[setdiff(samplepos,cv.test1),])]=1
testlabel=matrix(0,nrow(cv.test),1)
testlabel[1:length(cv.test1)]=1
samplelabel1=to_categorical(samplelabel,2)
result=matrix(0,length(testlabel),5)
for (kk in 1:5){
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = 'relu') %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 128, activation = 'relu') %>%
layer_dropout(rate = 0.2) %>%
layer_dense(units = 2, activation = 'sigmoid')
model %>% compile(
loss = 'binary_crossentropy',
optimizer = optimizer_rmsprop(),
metrics = c('accuracy')
)
model %>% fit(
as.matrix(cv.sample), samplelabel1,
epochs = 50, batch_size = 3,
validation_split = 0.1
)
result[,kk]=predict(model,as.matrix(cv.test))[,2]
}
print(ll)
plp=data.frame(label1[testindex,],rowSums(result)/5)
write.table(file='Sp_result.txt',plp,append=T,row.names = FALSE,col.names = FALSE,quote = FALSE)
}
